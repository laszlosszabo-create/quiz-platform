#!/usr/bin/env node

/**
 * DP RESULT OLDAL FORD√çT√ÅSOK HOZZ√ÅAD√ÅSA
 * A Product Result oldal hi√°nyz√≥ translation key-einek felvitele
 */

const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Hi√°nyz√≥ Supabase k√∂rnyezeti v√°ltoz√≥k!')
  console.error('NEXT_PUBLIC_SUPABASE_URL:', !!supabaseUrl)
  console.error('SUPABASE_SERVICE_ROLE_KEY:', !!supabaseServiceKey)
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

const QUIZ_ID = 'c54e0ded-edc8-4c43-8e16-ecb6e33f5291' // ADHD Quick Check

// DP Result oldal hi√°nyz√≥ ford√≠t√°sok
const dpResultTranslations = {
  // Hero section
  'purchase_success_title': {
    'hu': 'Sikeres V√°s√°rl√°s!',
    'en': 'Purchase Successful!'
  },
  'access_granted': {
    'hu': 'Hozz√°f√©r√©s Aktiv√°lva',
    'en': 'Access Granted'
  },
  
  // Action cards
  'download_materials': {
    'hu': 'Anyagok Let√∂lt√©se',
    'en': 'Download Materials'
  },
  'download_materials_desc': {
    'hu': 'T√∂ltsd le a szem√©lyre szabott anyagaidat',
    'en': 'Download your personalized materials'
  },
  'book_consultation': {
    'hu': 'Konzult√°ci√≥ Foglal√°s',
    'en': 'Book Consultation'
  },
  'book_consultation_desc': {
    'hu': 'Foglalj id≈ëpontot szem√©lyre szabott konzult√°ci√≥ra',
    'en': 'Book an appointment for personalized consultation'
  },
  'premium_access': {
    'hu': 'Premium Hozz√°f√©r√©s',
    'en': 'Premium Access'
  },
  'premium_access_desc': {
    'hu': 'Exkluz√≠v tartalmak √©s szolg√°ltat√°sok',
    'en': 'Exclusive content and services'
  },
  'download_button': {
    'hu': 'Let√∂lt√©s',
    'en': 'Download'
  },
  'booking_button': {
    'hu': 'Id≈ëpont Foglal√°s',
    'en': 'Book Appointment'
  },
  'premium_button': {
    'hu': 'Megnyit√°s',
    'en': 'Open'
  },
  
  // Analysis sections
  'your_analysis': {
    'hu': 'Az √ñn Eredm√©nye',
    'en': 'Your Analysis'
  },
  'analysis_description': {
    'hu': 'R√©szletes elemz√©s a quiz eredm√©nyei alapj√°n',
    'en': 'Detailed analysis based on quiz results'
  },
  'ai_analysis_title': {
    'hu': 'AI Szem√©lyre Szabott Elemz√©s',
    'en': 'AI Personalized Analysis'
  },
  'ai_analysis_description': {
    'hu': 'Mesters√©ges intelligencia √°ltal k√©sz√≠tett r√©szletes √©rt√©kel√©s',
    'en': 'Detailed assessment created by artificial intelligence'
  },
  'ai_generating': {
    'hu': 'AI elemz√©s gener√°l√°sa folyamatban...',
    'en': 'AI analysis generation in progress...'
  },
  'points_label': {
    'hu': 'pont',
    'en': 'points'
  },
  'category_label': {
    'hu': 'kateg√≥ria',
    'en': 'category'
  },
  
  // Booking section
  'booking_title': {
    'hu': 'Id≈ëpont Foglal√°s',
    'en': 'Book Appointment'
  },
  'booking_description': {
    'hu': 'V√°lasszon id≈ëpontot a szem√©lyre szabott konzult√°ci√≥ra',
    'en': 'Choose a time for personalized consultation'
  },
  
  // Messages
  'purchase_success_message': {
    'hu': 'Sikeres v√°s√°rl√°s! K√∂sz√∂nj√ºk a bizalmat.',
    'en': 'Successful purchase! Thank you for your trust.'
  },
  'payment_cancelled': {
    'hu': 'Fizet√©s megszak√≠tva.',
    'en': 'Payment cancelled.'
  },
  'ai_error_language': {
    'hu': 'Az AI eredm√©ny gener√°l√°sa nem el√©rhet≈ë ehhez a nyelvhez.',
    'en': 'AI result generation is not available for this language.'
  },
  'ai_error_failed': {
    'hu': 'Az AI eredm√©ny gener√°l√°sa sikertelen.',
    'en': 'AI result generation failed.'
  },
  'ai_error_unavailable': {
    'hu': 'Az AI eredm√©ny gener√°l√°sa nem √©rhet≈ë el.',
    'en': 'AI result generation is not available.'
  }
}

// Admin interface ford√≠t√°sok
const adminTranslations = {
  // Product Config Editor
  'product_config_title': {
    'hu': 'Term√©k Konfigur√°ci√≥',
    'en': 'Product Configuration'
  },
  'product_config_description': {
    'hu': 'V√°laszd ki a term√©ket, amelyhez be√°ll√≠t√°sokat szeretn√©l m√≥dos√≠tani',
    'en': 'Select the product you want to configure'
  },
  'select_product': {
    'hu': 'Term√©k kiv√°laszt√°sa',
    'en': 'Select Product'
  },
  'choose_product_placeholder': {
    'hu': 'V√°lassz term√©ket...',
    'en': 'Choose product...'
  },
  'theme_settings': {
    'hu': 'T√©ma Be√°ll√≠t√°sok',
    'en': 'Theme Settings'
  },
  'theme_settings_desc': {
    'hu': 'Term√©k-specifikus design √©s sz√≠nek',
    'en': 'Product-specific design and colors'
  },
  'feature_settings': {
    'hu': 'Funkci√≥ Be√°ll√≠t√°sok',
    'en': 'Feature Settings'
  },
  'feature_settings_desc': {
    'hu': 'Term√©k-specifikus funkci√≥k ki/bekapcsol√°sa',
    'en': 'Enable/disable product-specific features'
  },
  'content_settings': {
    'hu': 'Tartalom Be√°ll√≠t√°sok',
    'en': 'Content Settings'
  },
  'content_settings_desc': {
    'hu': 'Term√©k-specifikus sz√∂vegek √©s √ºzenetek',
    'en': 'Product-specific texts and messages'
  },
  'primary_color': {
    'hu': 'Els≈ëdleges sz√≠n',
    'en': 'Primary Color'
  },
  'secondary_color': {
    'hu': 'M√°sodlagos sz√≠n',
    'en': 'Secondary Color'
  },
  'accent_color': {
    'hu': 'Kiemel√©s sz√≠n',
    'en': 'Accent Color'
  },
  'background_gradient': {
    'hu': 'H√°tt√©r gradient',
    'en': 'Background Gradient'
  },
  'analysis_type': {
    'hu': 'Elemz√©s t√≠pusa',
    'en': 'Analysis Type'
  },
  'only_score': {
    'hu': 'Csak pontsz√°m',
    'en': 'Score Only'
  },
  'only_ai': {
    'hu': 'Csak AI elemz√©s',
    'en': 'AI Only'
  },
  'both_analysis': {
    'hu': 'Mindkett≈ë',
    'en': 'Both'
  },
  'show_booking': {
    'hu': 'Id≈ëpont foglal√°s',
    'en': 'Show Booking'
  },
  'show_download': {
    'hu': 'Let√∂lt√©s gomb',
    'en': 'Show Download'
  },
  'show_premium': {
    'hu': 'Premium hozz√°f√©r√©s',
    'en': 'Premium Access'
  },
  'enable_ai': {
    'hu': 'AI elemz√©s',
    'en': 'AI Analysis'
  },
  'save_theme': {
    'hu': 'T√©ma Ment√©se',
    'en': 'Save Theme'
  },
  'save_features': {
    'hu': 'Funkci√≥k Ment√©se',
    'en': 'Save Features'
  },
  'save_content': {
    'hu': 'Tartalom Ment√©se',
    'en': 'Save Content'
  },
  'success_message_label': {
    'hu': 'Sikeres v√°s√°rl√°s √ºzenet',
    'en': 'Success Message'
  },
  'download_text_label': {
    'hu': 'Let√∂lt√©s gomb sz√∂veg',
    'en': 'Download Button Text'
  },
  'booking_text_label': {
    'hu': 'Foglal√°s gomb sz√∂veg',
    'en': 'Booking Button Text'
  },
  'config_saved': {
    'hu': 'Konfigur√°ci√≥ sikeresen mentve!',
    'en': 'Configuration saved successfully!'
  },
  'config_deleted': {
    'hu': 'Konfigur√°ci√≥ t√∂r√∂lve!',
    'en': 'Configuration deleted!'
  },
  'save_failed': {
    'hu': 'Ment√©s sikertelen!',
    'en': 'Save failed!'
  },
  'delete_failed': {
    'hu': 'T√∂rl√©s sikertelen!',
    'en': 'Delete failed!'
  },
  'no_products_warning': {
    'hu': 'Nincsenek term√©kek ehhez a quiz-hez. El≈ësz√∂r hozz l√©tre term√©keket a Term√©kek tab-ban.',
    'en': 'No products for this quiz. Please create products in the Products tab first.'
  },
  'loading_configs': {
    'hu': 'Konfigur√°ci√≥k bet√∂lt√©se...',
    'en': 'Loading configurations...'
  }
}

async function seedDPTranslations() {
  console.log('üåê DP RESULT OLDAL FORD√çT√ÅSOK HOZZ√ÅAD√ÅSA')
  console.log('================================================')
  
  try {
    // Combine all translations
    const allTranslations = { ...dpResultTranslations, ...adminTranslations }
    
    let insertedCount = 0
    let updatedCount = 0
    
    // Insert each translation
    for (const [key, translations] of Object.entries(allTranslations)) {
      for (const [lang, value] of Object.entries(translations)) {
        // Check if translation already exists
        const { data: existing } = await supabase
          .from('quiz_translations')
          .select('id')
          .eq('quiz_id', QUIZ_ID)
          .eq('field_key', key)
          .eq('lang', lang)
          .single()
        
        if (existing) {
          // Update existing
          const { error } = await supabase
            .from('quiz_translations')
            .update({ 
              value,
              updated_at: new Date().toISOString()
            })
            .eq('id', existing.id)
          
          if (error) {
            console.error(`‚ùå Friss√≠t√©s hiba: ${key} (${lang})`, error.message)
          } else {
            console.log(`üîÑ Friss√≠tve: ${key} (${lang}) = "${value}"`)
            updatedCount++
          }
        } else {
          // Insert new
          const { error } = await supabase
            .from('quiz_translations')
            .insert({
              quiz_id: QUIZ_ID,
              field_key: key,
              lang,
              value
            })
          
          if (error) {
            console.error(`‚ùå Besz√∫r√°s hiba: ${key} (${lang})`, error.message)
          } else {
            console.log(`‚úÖ √öj: ${key} (${lang}) = "${value}"`)
            insertedCount++
          }
        }
      }
    }
    
    console.log('\nüìä √ñSSZES√çT≈ê:')
    console.log(`‚úÖ √öj ford√≠t√°sok: ${insertedCount}`)
    console.log(`üîÑ Friss√≠tett ford√≠t√°sok: ${updatedCount}`)
    console.log(`üìù √ñsszes kulcs: ${Object.keys(allTranslations).length}`)
    console.log(`üåê T√°mogatott nyelvek: hu, en`)
    console.log('\nüéâ DP RESULT FORD√çT√ÅSOK K√âSZ!')
    
  } catch (error) {
    console.error('‚ùå Ford√≠t√°sok hozz√°ad√°sa sikertelen:', error)
    process.exit(1)
  }
}

// Script ind√≠t√°sa
if (require.main === module) {
  seedDPTranslations()
}

module.exports = { dpResultTranslations, adminTranslations }
