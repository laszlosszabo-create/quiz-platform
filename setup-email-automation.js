#!/usr/bin/env node

// Script to setup email automation rules via API
const fetch = require('node-fetch')

const QUIZ_ID = 'c54e0ded-edc8-4c43-8e16-ecb6e33f5291' // Real quiz ID

const automationRules = [
  {
    trigger_type: 'quiz_complete',
    template_type: 'result',
    delay_minutes: 5, // 5 perc k√©sleltet√©ssel k√ºldi az eredm√©nyt
    conditions: {
      min_percentage: 0 // Minden eredm√©nyre k√ºld
    },
    is_active: true,
    description: 'Eredm√©ny email k√ºld√©se quiz kit√∂lt√©s ut√°n 5 perccel'
  },
  
  {
    trigger_type: 'purchase',
    template_type: 'purchase', 
    delay_minutes: 2, // 2 perc k√©sleltet√©ssel k√ºldi a v√°s√°rl√°s meger≈ës√≠t√©st
    conditions: {
      has_purchase: true
    },
    is_active: true,
    description: 'V√°s√°rl√°s meger≈ës√≠t≈ë email 2 perccel a fizet√©s ut√°n'
  },
  
  {
    trigger_type: 'no_purchase_reminder',
    template_type: 'reminder',
    delay_minutes: 1440, // 24 √≥ra (1440 perc) m√∫lva k√ºldi az eml√©keztet≈ët
    conditions: {
      has_purchase: false,
      min_percentage: 50 // Csak 50% feletti eredm√©nyre
    },
    is_active: true,
    description: '24 √≥r√°s eml√©keztet≈ë email azoknak, akik nem v√°s√°roltak, de j√≥ eredm√©nyt √©rtek el'
  }
]

const setupAutomation = async () => {
  console.log('ü§ñ Email automation szab√°lyok be√°ll√≠t√°sa...\n')
  
  for (let i = 0; i < automationRules.length; i++) {
    const rule = automationRules[i]
    
    try {
      console.log(`‚öôÔ∏è Szab√°ly l√©trehoz√°sa: ${rule.trigger_type}`)
      console.log(`   ‚è±Ô∏è  K√©sleltet√©s: ${rule.delay_minutes} perc`)
      console.log(`   üìß Template: ${rule.template_type}`)
      
      const response = await fetch('http://localhost:3000/api/admin/email-automation-rules', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          quiz_id: QUIZ_ID,
          ...rule
        })
      })
      
      if (response.ok) {
        const result = await response.json()
        console.log(`‚úÖ Sikeresen l√©trehozva! ID: ${result.id}`)
        console.log(`   üìã Le√≠r√°s: ${rule.description}\n`)
      } else {
        const error = await response.text()
        console.log(`‚ùå Hiba: ${rule.trigger_type} - ${error}\n`)
      }
      
    } catch (error) {
      console.log(`‚ùå Kapcsol√≥d√°si hiba: ${error.message}\n`)
    }
  }
  
  console.log('üéØ Automation be√°ll√≠t√°s befejezve!')
  console.log('\nüìä Be√°ll√≠tott triggerek:')
  console.log('1. Quiz befejez√©s ‚Üí Eredm√©ny email (5 perc k√©s√©s)')
  console.log('2. V√°s√°rl√°s ‚Üí Meger≈ës√≠t≈ë email (2 perc k√©s√©s)')
  console.log('3. Eml√©keztet≈ë ‚Üí 24 √≥ra m√∫lva (csak j√≥ eredm√©ny≈±eknek)')
  console.log('\nüîß Tesztel√©shez haszn√°lja az Admin UI-t!')
}

// Futtat√°s
if (require.main === module) {
  console.log('FIGYELEM: Cser√©lje le a QUIZ_ID √©rt√©ket a val√≥s quiz ID-re!')
  console.log('Aktu√°lis QUIZ_ID:', QUIZ_ID)
  console.log('Folytatja? (Ctrl+C a megszak√≠t√°shoz)\n')
  
  setTimeout(() => {
    setupAutomation()
  }, 3000)
}
